{
    "name": "Crowd Counting (P2P)",
    "usedfor": "Counting people in crowded place",
    "consideration": "- A single person can be counted more than once\n- Depending on the interval, person might not be observed and counted\n- person must be within close proximity\n- Underwater visibility might affect the results ",
    "assumption": "For the stream, depending on the interval, the sampling rate is going to be a frame per second or slower.",
    "results_description": "Line chart shows number of person in the sight of view per predicted frame\nUser can aggregate results by second, minutes, hour and day\nAggregation includes sum and average\n\nEach frame will have relative (video) or actual (stream) timestamp.\n\nFor the video, the result will be published after the full prediction is completed\n\nFor the stream, the results will be published actively",
    "structure": {
        "feeds": {
            "sources": [
                "video",
                "streaming_source"
            ],
            "params":[
                {
                    "name": "filename",
                    "type": "string",
                    "disc": "filepath for video in case of streaming from video file",
                    "source": "infered",
                    "default": null
                },
                {
                    "name": "url",
                    "type": "string",
                    "disc": "url for camera in case of streaming server",
                    "source": "infered",
                    "default": null
                },
                {
                    "name": "host",
                    "type": "string",
                    "disc": "host for camera in case of rtsp camera",
                    "source": "infered",
                    "default": null
                },
                {
                    "name": "port",
                    "type": "string",
                    "disc": "port for camera in case of rtsp camera",
                    "source": "infered",
                    "default": null
                },
                {
                    "name": "username",
                    "type": "string",
                    "disc": "username for camera in case of rtsp camera",
                    "source": "infered",
                    "default": null
                },
                {
                    "name": "password",
                    "type": "string",
                    "disc": "password for camera in case of rtsp camera",
                    "source": "infered",
                    "default": null
                },
                {
                    "name": "sample_every",
                    "type": "int",
                    "disc": "Sample every (seconds for stream and frame for video)",
                    "source": "user",
                    "default": 30
                },
                {
                    "name": "min_score_thresh",
                    "type": "float",
                    "disc": "Minimum detection confidance ([0-1])",
                    "source": "user",
                    "default": 0.50
                },
                {
                    "name": "max_points",
                    "type": "int",
                    "disc": "Maximum number of points ([0-500])",
                    "source": "user",
                    "default": 500
                },
                {
                    "name": "length",
                    "type": "float",
                    "disc": "Length of streaming (seconds, -1 for entire video)",
                    "source": "user",
                    "default": -1
                },
                {
                    "name": "frequency",
                    "type": "int",
                    "disc": "Output frequency (every n frame)",
                    "source": "user",
                    "default": 3
                },
                {
                    "name": "ntasks",
                    "type": "int",
                    "disc": "Number of tcp process at a time",
                    "source": "user",
                    "default": 4
                },
                {
                    "name": "resolution",
                    "type": "string",
                    "disc": "Stream resolution",
                    "source": "user",
                    "default": "720p"
                }
            ]
        },
        "nodes": [
            {
                "name": "stream_source",
                "type": "DynamicSource",
                "filename": "$filename",
                "url": "$url",
                "host": "$host",
                "port": "$port",
                "username": "$username",
                "password": "$password",
                "length": "$length",
                "sample_every": "$sample_every",
                "resolution": "$resolution"
            },
            {
                "name": "crowd_counting_model",
                "type": "TorchModel",
                "model_name": "p2pnet",
                "version": 1,
                "protocol": "gRPC"
            },
            {
                "name": "crowd_counting_model_thread",
                "type": "ConcurrentTorchgRPCTasksThreadWrapper",
                "node": "crowd_counting_model",
                "ntasks": "$ntasks"
            },
            {
                "name": "falcoeye_p2p",
                "type": "FalcoeyeP2PNode",
                "min_score_thresh": "$min_score_thresh",
                "max_points": "$max_points"
            },
            {
                "name": "point_counter",
                "type": "PointCounter"
            },
            {
                "name": "csv_outputter",
                "type": "CSVWriter",
                "xaxis": "Timestamp",
                "yaxis": "Count",
                "prefix": "$prefix"
            },
            {
                "name": "sequence_runner",
                "type": "SequenceRunner",
                "frequency": "$frequency",
                "nodes": [
                    "falcoeye_p2p",
                    "point_counter",
                    "csv_outputter"
                ]
            }
        ],

        "edges": [
            ["stream_source","crowd_counting_model_thread"],
            ["falcoeye_p2p","point_counter"],
            ["point_counter","csv_outputter"],
            ["crowd_counting_model_thread","sequence_runner"]
        ],
        "starters":["stream_source"],
        "run_order": [
            "sequence_runner",
            "crowd_counting_model_thread",
            "stream_source"
        ]
    }
}
