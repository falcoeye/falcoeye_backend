{
    "name": "Dine-In",
    "usedfor": "Monitoring number of people dining-in in certain restaurant over several time intervals to compare the crowd over daytime, days, weeks, months and seasons. ",
    "consideration": "- Depending on the interval, a person might not be observed and counted",
    "assumption": "For the stream, depending on the interval, the sampling rate is going to be a frame per second or slower.",
    "results_description": "Line chart",
    "structure":{
        "args": [
            {
                "name": "filename",
                "type": "string",
                "disc": "filepath for video in case of streaming from video file",
                "source": "infered",
                "default": null
            },
            {
                "name": "url",
                "type": "string",
                "disc": "url for camera in case of streaming server",
                "source": "infered",
                "default": null
            },
            {
                "name": "host",
                "type": "string",
                "disc": "host for camera in case of rtsp camera",
                "source": "infered",
                "default": null
            },
            {
                "name": "port",
                "type": "string",
                "disc": "port for camera in case of rtsp camera",
                "source": "infered",
                "default": null
            },
            {
                "name": "username",
                "type": "string",
                "disc": "username for camera in case of rtsp camera",
                "source": "infered",
                "default": null
            },
            {
                "name": "password",
                "type": "string",
                "disc": "password for camera in case of rtsp camera",
                "source": "infered",
                "default": null
            },
            {
                "name": "sample_every",
                "type": "int",
                "disc": "Sample every (seconds for stream and frame for video)",
                "source": "user",
                "default": 1
            },
            {
                "name": "min_score_thresh",
                "type": "float",
                "disc": "Minimum detection confidance ([0-1])",
                "source": "user",
                "default": 0.50
            },
            {
                "name": "max_boxes",
                "type": "int",
                "disc": "Maximum number of detections ([0-100])",
                "source": "user",
                "default": 100
            },
            {
                "name": "length",
                "type": "float",
                "disc": "Length of streaming (seconds, -1 for entire video)",
                "source": "user",
                "default": -1
            },
            {
                "name": "frequency",
                "type": "int",
                "disc": "Output frequency (every n frame)",
                "source": "user",
                "default": 3
            }
        ],
        "nodes": [
            {
                "name": "stream_source",
                "type": "DynamicSource",
                "filename": "$filename",
                "url": "$url",
                "host": "$host",
                "port": "$port",
                "username": "$username",
                "password": "$password",
                "length": "$length",
                "sample_every": "$sample_every"
            },
            {
                "name": "objectsmobilenet_model",
                "type": "TFObjectDetectionModel",
                "model_name": "objectsmobilenet",
                "version": 1
            },
            {
                "name": "objectsmobilenet_model_thread",
                "type": "ConcurrentPostTasksThreadWrapper",
                "node": "objectsmobilenet_model",
                "tcplimit": 8
            },
            {
                "name": "falcoeye_detection",
                "type": "FalcoeyeDetectionNode",
                "labelmap": {
                    "1": "person"
                },
                "min_score_thresh": "$min_score_thresh",
                "max_boxes": "$max_boxes"
            },
            {
                "name": "class_counter",
                "type": "ClassCounter",
                "keys": ["person"]
            },
            {
                "name": "csv_outputter",
                "type": "CSVWriter",
                "xaxis": "Timestamp",
                "yaxis": "person",
                "prefix": "$prefix"
            },
            {
                "name": "sequence_runner",
                "type": "SequenceRunner",
                "frequency": "$frequency",
                "nodes": [
                    "falcoeye_detection",
                    "class_counter",
                    "csv_outputter"
                ]
            }
        ],
        "edges": [
            ["stream_source","objectsmobilenet_model_thread"],
            ["falcoeye_detection","class_counter"],
            ["class_counter","csv_outputter"],
            ["objectsmobilenet_model_thread","sequence_runner"]
        ],
        "starters":["stream_source"],
        "run_order": [
            "sequence_runner",
            "objectsmobilenet_model_thread",
            "stream_source"
        ]
    }
}
